{"version":3,"sources":["logo.png","components/Header.js","components/Categories.js","components/StatisticsContainer.js","components/Notes.js","components/AddNewNote.js","components/ExpensesContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","src","logo","alt","activeStyle","textDecoration","Categories","pie","totalCost","colorScale","data","pieData","height","width","animate","duration","labelRadius","style","labels","fontSize","fill","categories","map","el","name","sum","onClick","deleteCategory","id","StatisticsContainer","Notes","notes","length","text","date","category","price","deleteNote","AddNewNote","type","value","textNote","onChange","setText","placeholder","setPrice","newCategory","e","setNewCategory","target","addNote","addCategory","clearNotes","selectCategory","changeCategory","selectSortCategory","changeSortCategory","sortNotes","sortCategories","ExpensesContainer","App","useEffect","numTotalCost","localStorage","setItem","JSON","stringify","useState","saved","getItem","parse","setNotes","initValue","setCategories","setTotalCost","setTextNote","setPriceValue","setCategory","setSelectSortCategory","selCategory","sort","a","b","Date","setPieData","setData","newData","push","x","y","copyCateg","newCateg","Math","random","count","forEach","arr","doSumCategory","copySumCateg","element","newArr","filter","newArr2","clear","newnote","toLocaleString","numDate","getTime","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.42b7052b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4cb8c5bb.png\";","import React from \"react\";\r\nimport logo from '../logo.png';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n\r\n    return (\r\n        <>\r\n\r\n            <nav className=\"headerNav\">\r\n\r\n                <NavLink to=\"/\" className=\"logoBox\">\r\n\r\n                    <img className=\"logo\" src={logo} alt=\"logo\" />\r\n                    \r\n                </NavLink>\r\n\r\n                <ul>\r\n                    <li><NavLink to=\"/statistics\"\r\n                        activeStyle={{\r\n                            textDecoration: \"underline\",\r\n                        }}\r\n                    >\r\n                        Статистика\r\n                    </NavLink>\r\n                    </li>\r\n\r\n                    <li><NavLink to=\"/expenses\"\r\n                        activeStyle={{\r\n                            textDecoration: \"underline\",\r\n                        }}\r\n                    >\r\n                        Расходы\r\n                    </NavLink>\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n            </nav>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as V from 'victory';\r\nimport { VictoryPie } from 'victory';\r\n\r\nconst Categories = (props) => {\r\n\r\n    let pie;\r\n\r\n    if (props.totalCost > 0) {\r\n        pie = <VictoryPie\r\n            colorScale={[\"tomato\", \"orange\", \"gold\", \"cyan\", \"silver\", \"white\"]}\r\n\r\n            data={props.pieData}\r\n\r\n\r\n            height={550}\r\n            width={550}\r\n\r\n            animate={{\r\n                duration: 1150\r\n            }}\r\n\r\n\r\n            //   innerRadius={50}\r\n            labelRadius={150}\r\n            style={{ labels: { fontSize: 20, fill: \"black\" } }}\r\n\r\n        // radius={({ datum }) => 20 + datum.y * 200}\r\n        />;\r\n    } else pie = 'Расходов нет'\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h2 className=\"totalCost\">Общая сумма {props.totalCost}</h2>\r\n\r\n            {props.categories.map(el => {\r\n                return <h2 className=\"categories\" key={el.id}>\r\n                    {el.name}:\r\n                    <span>{el.sum}</span>\r\n                    <button className=\"btnDel\" onClick={() => props.deleteCategory(el.id, el.name)}>X</button>\r\n                </h2>\r\n            })}\r\n\r\n            <div className=\"pie\">\r\n\r\n                <span>\r\n                </span>\r\n                    \r\n\r\n                {pie}\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport Categories from \"./Categories\";\r\n\r\n\r\nconst StatisticsContainer = props => {\r\n    return (\r\n        <>\r\n            <Categories\r\n                categories={props.categories}\r\n                deleteCategory={props.deleteCategory}\r\n                totalCost={props.totalCost}\r\n                pieData={props.pieData}\r\n\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default StatisticsContainer;","import React from \"react\";\r\n\r\n\r\nconst Notes = props => {\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <ul className=\"notes btnDel\">\r\n                {!props.notes.length ? <div>Заметок нет</div> : props.notes.map(el => {\r\n                    return (\r\n\r\n                        <li key={el.id} className=\"notesItem\">\r\n                            <div className=\"noteTitle\">\r\n                                <div>{el.text}</div>\r\n                                <div>{el.date}</div>\r\n                                <div className=\"nameCategory\">{el.category}</div>\r\n                            </div>\r\n\r\n                            <span className=\"noteCost\">\r\n                                <div>{el.price}</div>\r\n\r\n                                <button onClick={() => { props.deleteNote(el.id) }}>X</button>\r\n                            </span>\r\n\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes;","import React from \"react\";\r\n\r\n\r\nconst AddNewNote = (props) => {\r\n\r\n\r\n    function check(e) {\r\n        props.changeSortCategory(e.target.value);\r\n        props.sortNotes(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"inputBox\">\r\n\r\n                <input type='text'\r\n                    value={props.textNote}\r\n                    onChange={props.setText}\r\n                    placeholder={'Text note'}\r\n                />\r\n\r\n                <input type='number'\r\n                    placeholder={props.price}\r\n                    value={props.price}\r\n                    onChange={props.setPrice}\r\n                />\r\n\r\n                <input type='text'\r\n\r\n                    placeholder={'enter new category'}\r\n                    value={props.newCategory}\r\n                    onChange={(e) => {\r\n                        props.setNewCategory(e.target.value)\r\n                    }\r\n\r\n                    }\r\n\r\n                />\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"buttonBox\">\r\n\r\n                <button className=\"buttonBoxItem\" onClick={props.addNote} >Добавить</button>\r\n                <button className=\"buttonBoxItem\" onClick={() => props.addCategory(props.newCategory)} >Добавить категорию</button>\r\n                <button className=\"buttonBoxItem\" onClick={props.clearNotes}>Очистить всё</button>\r\n\r\n                <select className=\"buttonBoxItem\" value={props.selectCategory.value} onChange={props.changeCategory}>\r\n                    {\r\n                        props.categories.map((el) => {\r\n                            return <option key={el.id} value={el.name}>{el.name}</option>\r\n                        })\r\n                    }\r\n\r\n\r\n                </select>\r\n\r\n            </div>\r\n\r\n            <div className=\"sortBox\">\r\n\r\n\r\n\r\n                <h2 className=\"sort\">Сортировка по ....</h2>\r\n\r\n                <select value={props.selectSortCategory.value} onChange={check}>\r\n                    {\r\n                        props.sortCategories.map((el) => {\r\n                            return <option key={el.value} value={el.value}>{el.value}</option>\r\n                        })\r\n                    }\r\n\r\n\r\n                </select>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewNote;","import React from 'react'\r\nimport Notes from './Notes';\r\nimport AddNewNote from './AddNewNote';\r\n\r\n\r\nconst ExpensesContainer = props => {\r\n    // debugger\r\n    return (\r\n        <>\r\n            <AddNewNote\r\n                textNote={props.textNote}\r\n                setText={props.setText}\r\n                addNote={props.addNote}\r\n                price={props.price}\r\n                setPrice={props.setPrice}\r\n                clearNotes={props.clearNotes}\r\n                selectCategory={props.selectCategory}\r\n                changeCategory={props.changeCategory}\r\n                addCategory={props.addCategory}\r\n                categories={props.categories}\r\n                newCategory={props.newCategory}\r\n                setNewCategory={props.setNewCategory}\r\n                sortCategories={props.sortCategories}\r\n                selectSortCategory={props.selectSortCategory}\r\n                changeSortCategory={props.changeSortCategory}\r\n                sortNotes={props.sortNotes}\r\n            />\r\n\r\n\r\n            <Notes notes={props.notes}\r\n                deleteNote={props.deleteNote}\r\n                categories={props.categories}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ExpensesContainer;\r\n\r\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport {Route} from \"react-router-dom\";\nimport StatisticsContainer from './components/StatisticsContainer';\nimport ExpensesContainer from './components/ExpensesContainer';\nimport ReactDOM from 'react-dom';\nimport * as V from 'victory';\n\nfunction App() {\n\n\n  // сохранение данных в LocalStorage\n  useEffect(() => {\n    numTotalCost(notes);\n    localStorage.setItem('notes', JSON.stringify(notes));\n    localStorage.setItem('categories', JSON.stringify(categories));\n\n  })\n\n\n\n\n\n  // Распаковка данных из LocalStorage\n  const [notes, setNotes] = useState(() => {\n    let saved = localStorage.getItem('notes');\n    let initValue = JSON.parse(saved);\n    return initValue || [];\n\n  });\n\n  const [categories, setCategories] = useState(() => {\n    let saved = localStorage.getItem('categories');\n    let initValue = JSON.parse(saved);\n    if (initValue == null || initValue.length == 0) {\n      return [\n        { id: 0, name: 'Еда', sum: 0, },\n        { id: 1, name: 'Связь', sum: 0, },\n      ];\n    } else return initValue\n\n\n  })\n\n\n\n  const [totalCost, setTotalCost] = useState(0);\n\n  const [textNote, setTextNote] = useState('Taxi');\n  const [price, setPriceValue] = useState(100);\n\n  const [selectCategory, setCategory] = useState({ value: 'Связь' });\n  const [newCategory, setNewCategory] = useState('newCategory');\n\n  const [sortCategories, setSortCategories] = useState([\n    { value: 'Свежие' },\n    { value: 'Давние' },\n    { value: 'Дорогие' },\n    { value: 'Дешевые' },\n\n  ]);\n\n\n\n  const [selectSortCategory, setSelectSortCategory] = useState({ value: 'Давние' });\n\n  const changeSortCategory = e => {\n    setSelectSortCategory({ value: e });\n\n  }\n\n\n\n\n    const sortNotes = (selCategory) => {\n\n\n      let Notes = [...notes];\n\n\n      if(selCategory.value === \"Свежие\") {\n\n\n        setNotes(Notes.sort(function (a, b) {\n          var dateA = new Date(b.date), dateB = new Date(a.date)\n\n          return dateA - dateB\n        }));\n\n      } \n\n      else if (selCategory.value === \"Давние\") {\n\n        setNotes(Notes.sort(function (a, b) {\n          var dateA = new Date(a.date), dateB = new Date(b.date)\n\n          return dateA - dateB\n        }));\n      }\n\n      else if (selCategory.value === \"Дорогие\") {\n        setNotes(Notes.sort(function (a, b) {\n          return +b.price - +a.price\n        }));\n      }\n\n      else if (selCategory.value === \"Дешевые\") {\n        setNotes(Notes.sort(function (a, b) {\n          return +a.price - +b.price\n        }));\n      }\n\n    }\n\n\n\n\n\n  let [pieData, setPieData] = useState([]);\n\n  const setData = () => {\n    let newData = [];\n\n    let copyCateg = [...categories];\n\n\n    copyCateg.map(el => {\n      if (el.sum > 0) {\n        newData.push({\n          x: el.name,\n          y: el.sum\n        })\n      }\n    })\n\n\n\n    setPieData(newData);\n  }\n\n\n\n\n\n\n\n  const addCategory = (value) => {\n\n    let copyCateg = [...categories];\n    let newCateg = {\n      id: Math.random(100) * 100000,\n      name: value,\n      price: 0,\n\n    }\n\n    let count = 0;\n\n    categories.forEach(el => {\n      if (el.name == value) {\n        count++;\n      }\n\n    })\n\n\n\n    count <= 0 ? copyCateg.push(newCateg) : count = null;\n\n    setCategories(copyCateg);\n    setNewCategory(\"\");\n  }\n\n\n\n\n  const numTotalCost = arr => {\n    let arrIn = arr;\n    let sum = 0;\n    arrIn.map(el => {\n      return sum += +el.price;\n    })\n\n    setTotalCost(sum);\n\n  }\n\n  const doSumCategory = () => {\n\n    let copySumCateg = [...categories];\n\n\n    copySumCateg.map(el => {\n      return el.sum = 0;\n    });\n\n    notes.forEach(element => {\n      copySumCateg.forEach(el => {\n        if (element.category == el.name) {\n          return el.sum += +element.price\n        }\n      })\n\n\n    });\n\n    setCategories(copySumCateg);\n  }\n\n\n\n  const deleteNote = id => {\n    let newArr = [...notes];\n    newArr = newArr.filter(el => el.id !== id)\n    setNotes(newArr);\n  }\n\n\n\n\n  const deleteCategory = (id, category) => {\n    let newArr = [...categories];\n    newArr = newArr.filter(el => el.id !== id);\n\n    let newArr2 = [...notes];\n    newArr2 = newArr2.filter(el => el.category !== category);\n\n\n    setCategories(newArr);\n    setNotes(newArr2);\n\n  }\n\n  const setText = e => {\n    setTextNote(e.target.value)\n  }\n\n  const setPrice = e => {\n    setPriceValue(e.target.value)\n  }\n\n\n  const clearNotes = () => {\n    setNotes([]);\n    localStorage.clear();\n    doSumCategory();\n\n  }\n\n\n  const addNote = () => {\n    // let id = 0;\n    let data = new Date;\n    let newnote = {\n      id: Math.random(100) * 100000,\n      text: textNote,\n      price: price,\n      category: selectCategory.value,\n      date: data.toLocaleString(),\n      numDate: data.getTime(),\n\n    };\n\n\n    setNotes([...notes, newnote]);\n    numTotalCost(notes);\n\n    setPriceValue(10);\n    setTextNote('');\n    localStorage.setItem('notes', JSON.stringify(notes));\n    doSumCategory();\n    setData();\n\n\n  }\n\n\n\n  const changeCategory = e => {\n    setCategory({ value: e.target.value })\n  }\n\n\n\n\n\n  useEffect(() => {\n    doSumCategory()\n  }, [notes])\n\n\n  useEffect(() => {\n    setData();\n  }, [notes])\n\n  useEffect(() => {\n    sortNotes(selectSortCategory);\n  }, [selectSortCategory])\n\n\n  return (\n\n    <div className=\"App\">\n\n\n      <Route path='*' component={Header} >\n\n      </Route>\n\n\n      <div className=\"main\">\n\n\n        <Route path='/statistics' render={() =>\n          <StatisticsContainer\n            categories={categories}\n            deleteCategory={deleteCategory}\n            totalCost={totalCost}\n            pieData={pieData}\n          />\n\n        }\n        />\n\n        <Route path='/expenses' render={() =>\n          <ExpensesContainer\n            notes={notes}\n            deleteNote={deleteNote}\n            categories={categories}\n            textNote={textNote}\n            setText={setText}\n            addNote={addNote}\n            price={price}\n            setPrice={setPrice}\n            clearNotes={clearNotes}\n            selectCategory={selectCategory}\n            changeCategory={changeCategory}\n            addCategory={addCategory}\n            categories={categories}\n            newCategory={newCategory}\n            setNewCategory={setNewCategory}\n            sortCategories={sortCategories}\n            selectSortCategory={selectSortCategory}\n            changeSortCategory={changeSortCategory}\n            sortNotes={sortNotes}\n          />\n\n        }\n\n\n        />\n\n\n\n\n        {/* <SideBar /> */}\n\n      </div>\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n\n      <App />\n\n  </BrowserRouter>\n),\n  document.getElementById('root'))\n\nreportWebVitals();"],"sourceRoot":""}